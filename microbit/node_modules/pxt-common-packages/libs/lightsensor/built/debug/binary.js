'use strict';
pxsim.noRefCounting();
pxsim.setTitle("lightsensor");
pxsim.setConfigData({}, {});
pxsim.pxtrt.mapKeyNames = [
 ""
];
__this.setupPerfCounters([]);


var _main___P1 = entryPoint = function (s) {
var r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = globals.zeroFx8___67;
    r0 = 0;
    globals.zeroFx8___67 = (r0);
    r0 = globals.oneFx8___68;
    r0 = 1;
    globals.oneFx8___68 = (r0);
    r0 = globals.twoFx8___69;
    r0 = 2;
    globals.twoFx8___69 = (r0);
    r0 = globals._pollEventQueue___141;
    r0 = undefined;
    globals._pollEventQueue___141 = (r0);
    r0 = globals._intervals___146;
    r0 = undefined;
    globals._intervals___146 = (r0);
    r0 = globals.minPriority___169;
    r0 = 1;
    globals.minPriority___169 = (r0);
    r0 = pxsim.Array_.mk();
    s.tmp_0 = r0;
    r0 = pxsim.Array_.push(s.tmp_0, inline__P534);
    r0 = globals.listeners___170;
    r0 = s.tmp_0;
    globals.listeners___170 = (r0);
    s.tmp_0 = { fn: forever__P154, parent: s };
    r0 = inline__P527;
    s.tmp_0.arg0 = r0;
    s.pc = 2;
    return actionCall(s.tmp_0)
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
_main___P1.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"test.ts","functionName":"<main>"}
_main___P1.continuations = [  ]



var inline__P527  = function (s) {
var r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = { fn: log__P175, parent: s };
    r0 = pxsim.input.lightLevel();
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 3);
    pxsim.String_.stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.String_.concat("light=", s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.pc = 2;
    return actionCall(s.tmp_0)
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
inline__P527.info = {"start":8,"length":57,"line":0,"column":8,"endLine":2,"endColumn":1,"fileName":"test.ts","functionName":"inline"}



var log__P175  = function (s) {
var r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = { fn: add__P171, parent: s };
    r0 = 1;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0;
    s.tmp_0.arg1 = r0;
    s.pc = 2;
    return actionCall(s.tmp_0)
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
log__P175.info = {"start":1439,"length":87,"line":57,"column":4,"endLine":59,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log"}



var add__P171  = function (s) {
var r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.i___531 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    s.tmp_0 = r0;
    r0 = globals.minPriority___169;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    s.tmp_2 = r0;
    r0 = pxsim.numops.toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    { step = 6; continue; }
    { step = 2; continue; }
  case 1:
  case 2:
    r0 = s.arg1;
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 7);
    pxsim.String_.stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim.String_.concat(s.tmp_4, "\n");
    s.tmp_5 = r0;
    r0 = s.arg1;
    r0 = s.tmp_5;
    s.arg1 = (r0);
    r0 = s.i___531;
    r0 = 0;
    s.i___531 = (r0);
  case 3:
    r0 = s.i___531;
    s.tmp_0 = r0;
    r0 = globals.listeners___170;
    s.tmp_1 = r0;
    r0 = pxsim.Array_.length(s.tmp_1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 < s.tmp_2);
    s.tmp_3 = r0;
    r0 = pxsim.numops.toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.tmp_4 = { fn: add__P171, parent: s };
    r0 = globals.listeners___170;
    s.tmp_5 = r0;
    r0 = s.i___531;
    s.tmp_6 = r0;
    r0 = pxsim.Array_.getAt(s.tmp_5, s.tmp_6);
    s.tmp_4.argL = r0;
    r0 = s.arg0;
    s.tmp_4.arg0 = r0;
    r0 = s.arg1;
    s.tmp_4.arg1 = r0;
    s.pc = 8;
    setupLambda(s.tmp_4, s.tmp_4.argL);
    return actionCall(s.tmp_4)
  case 8:
    r0 = s.retval;
    r0 = s.i___531;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.tmp_1 = r0;
    r0 = s.i___531;
    r0 = s.tmp_1;
    s.i___531 = (r0);
    { step = 3; continue; }
  case 5:
  case 6:
    r0 = s.i___531;
    return leave(s, r0)
  default: oops()
} } }
add__P171.info = {"start":632,"length":280,"line":28,"column":4,"endLine":35,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add"}



var inline__P534  = function (s) {
var r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    s.tmp_0 = r0;
    r0 = s.arg1;
    s.tmp_1 = r0;
    r0 = pxsim.control.__log(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P534.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline"}



var forever__P154  = function (s) {
var r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    s.tmp_0 = r0;
    r0 = pxsim.loops.forever(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
forever__P154.info = {"start":8397,"length":63,"line":274,"column":0,"endLine":276,"endColumn":1,"fileName":"pxt_modules/base/control.ts","functionName":"forever"}


setupDebugger(1)
